{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danny\\\\farmingBlog\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useContextAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useContextAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const login = (email, password) => {\n    if (email === 'dannydo@test.com' && password === 'asdf1234') {\n      setUser({\n        email\n      });\n      return true;\n    } else {\n      throw new Error('Invalid credentials');\n    }\n  };\n  const signup = (email, password) => {\n    if (email && password) {\n      setUser({\n        email\n      });\n      return true;\n    } else {\n      throw new Error('Please provide valid email and password');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      signup,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n_s2(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useContextAuth","_s","AuthProvider","children","_s2","user","setUser","login","email","password","Error","signup","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Danny/farmingBlog/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useContextAuth = () => {\r\n\treturn useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\tconst [user, setUser] = useState(null);\r\n\r\n\tconst login = (email, password) => {\r\n\t\tif (email === 'dannydo@test.com' && password === 'asdf1234') {\r\n\t\t\tsetUser({ email });\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid credentials');\r\n\t\t}\r\n\t};\r\n\r\n\tconst signup = (email, password) => {\r\n\t\tif (email && password) {\r\n\t\t\tsetUser({ email });\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthrow new Error('Please provide valid email and password');\r\n\t\t}\r\n\t};\r\n\r\n\tconst logout = () => {\r\n\t\tsetUser(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider value={{ user, login, signup, logout }}>\r\n\t\t\t{children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,OAAON,UAAU,CAACI,WAAW,CAAC;AAC/B,CAAC;AAACE,EAAA,CAFWD,cAAc;AAI3B,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMW,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAClC,IAAID,KAAK,KAAK,kBAAkB,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAC5DH,OAAO,CAAC;QAAEE;MAAM,CAAC,CAAC;MAClB,OAAO,IAAI;IACZ,CAAC,MAAM;MACN,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;IACvC;EACD,CAAC;EAED,MAAMC,MAAM,GAAGA,CAACH,KAAK,EAAEC,QAAQ,KAAK;IACnC,IAAID,KAAK,IAAIC,QAAQ,EAAE;MACtBH,OAAO,CAAC;QAAEE;MAAM,CAAC,CAAC;MAClB,OAAO,IAAI;IACZ,CAAC,MAAM;MACN,MAAM,IAAIE,KAAK,CAAC,yCAAyC,CAAC;IAC3D;EACD,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACpBN,OAAO,CAAC,IAAI,CAAC;EACd,CAAC;EAED,oBACCR,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAET,IAAI;MAAEE,KAAK;MAAEI,MAAM;MAAEC;IAAO,CAAE;IAAAT,QAAA,EAC3DA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEzB,CAAC;AAACd,GAAA,CA9BWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}